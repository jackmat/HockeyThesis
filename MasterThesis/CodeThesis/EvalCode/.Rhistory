mutate(PlayerName = replace(PlayerName, PlayerName=='Martin St Pierre', 'Martin St. Pierre')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Matthew Carle', 'Matt Carle')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Maxime Talbot', 'Max Talbot')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Micki Dupont', 'Micki DuPont')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Funk', 'Mike Funk')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Grier', 'Mike Grier')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Zigomanis', 'Mike Zigomanis')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nicklas Grossmann', 'Niklas Grossman')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Niclas Bergfors', 'Nicklas Bergfors')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nikolay Zherdev', 'Nikolai Zherdev')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Olie Kolzig', 'Olaf Kolzig')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Patrick Rissmiller', 'Pat Rissmiller')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Pete Vandermeer', 'Peter Vandermeer')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Teddy Purcell', 'Ted Purcell')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vinny Prospal', 'Vaclav Prospal')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vitaly Vishnevski', 'Vitali Vishnevsky')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vyacheslav Kozlov', 'Slava Kozlov')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexandre Bolduc', 'Alex Bolduc')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Dan Lacouture', 'Dan LaCouture')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='David Van Der Gulik', 'David Van der Gulik')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Evgeny Artyukhin', 'Evgeni Artyukhin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jaime Sifers', 'Jamie Sifers')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Maksim Mayorov', 'Maxim Mayorov')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Martins Karsums', 'Martin Karsums')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Sauer', 'Mike Sauer')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Mitchell Fritz', 'Mitch Fritz')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nikolay Kulemin', 'Nikolai Kulemin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Pierre-Luc Letourneau-Leblond', 'Pierre-Luc Leblond')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='TJ Galiardi', 'T.J. Galiardi')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Patrick Dwyer', 'Pat Dwyer'))
GeneralTable<-GeneralTable%>%left_join(CompareGP[[i]][c('PlayerId','PlayerName', 'GP','GPsec')],
by = c("id"= "PlayerId"))
GeneralTable
View(GeneralTable)
GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
(SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
GPquery
GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
GPPlayer
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
GPquery
mynames<-as.numeric(as.character(names(SecTableGP)))
mynames
GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
dim(GPPlayer)== dim(GPPlayers)
SecTableGP<-colSums(mylistDatasets[[i]]$TimeSet[,2:ncol(mylistDatasets[[i]]$TimeSet)] != 0)
mynames<-as.numeric(as.character(names(SecTableGP)))
SecTableGP<-data.frame(PlayerId=mynames,
GPsec=unlist(SecTableGP,use.names = F))
GPquery
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
pathData-> read.csv("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable.csv")
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
Mydata-> read.table("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable.csv")
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
Mydata-> read.csv("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable.csv")
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
PlayerId-> read.csv("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable.csv")
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
PlayerId<- read.("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable.csv")
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
PlayerId<- read.csv("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable.csv")
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
GPPlayer<- read.csv("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable.csv")
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
dim(GPPlayer)== dim(GPPlayers)
SecTableGP<-colSums(mylistDatasets[[i]]$TimeSet[,2:ncol(mylistDatasets[[i]]$TimeSet)] != 0)
mynames<-as.numeric(as.character(names(SecTableGP)))
SecTableGP<-data.frame(PlayerId=mynames,
GPsec=unlist(SecTableGP,use.names = F))
CompareGP[[i]]<-left_join(SecTableGP, GPPlayers, by = "PlayerId")
GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
(SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
GPquery
i
# Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv")
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
dim(GPPlayer)== dim(GPPlayers)
SecTableGP<-colSums(mylistDatasets[[i]]$TimeSet[,2:ncol(mylistDatasets[[i]]$TimeSet)] != 0)
mynames<-as.numeric(as.character(names(SecTableGP)))
SecTableGP<-data.frame(PlayerId=mynames,
GPsec=unlist(SecTableGP,use.names = F))
CompareGP[[i]]<-left_join(SecTableGP, GPPlayers, by = "PlayerId")
}
## Warning In. local(con, statement)... Decimal MySQL is GOOD
totPath <- paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/EvalCode/",
"scrappingSalariesNHL.R")
source(totPath)
GeneralTableList<-list()
if(SalariesCalc ==FALSE){
SalariesCalc <- TRUE
Salaries2007<-main(2008) # stands for paste0((year-1),'-', year)
Salaries2008<-main(2009)}
listSalaries<- list(Salaries2007, Salaries2008)
for(i in 1:length(c(2007,2008))){
print(i)
# change to 1 or 2 for 2007 or 2008
GeneralTable<-data.frame(id =colnames(mylistDatasets[[i]]$Direct)[2:length(mylistDatasets[[i]]$Direct)])%>%
mutate(Direct = apply(mylistDatasets[[i]]$Direct[,2:ncol(mylistDatasets[[i]]$Direct)],2,sum))%>%
mutate(Directh = apply(mylistDatasets[[i]]$Directh[,2:ncol(mylistDatasets[[i]]$Directh)],2,sum))%>%
mutate(Collective = apply(mylistDatasets[[i]]$Collective[,2:ncol(mylistDatasets[[i]]$Collective)],2,sum))%>%
mutate(Collectiveh = apply(mylistDatasets[[i]]$Collectiveh[,2:ncol(mylistDatasets[[i]]$Collectiveh)],2,sum))
GeneralTable$id<- as.numeric(as.character(GeneralTable$id))
GeneralTable<-GeneralTable%>%left_join(CompareGP[[i]][c('PlayerId','PlayerName', 'GP','GPsec')],
by = c("id"= "PlayerId"))%>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexander Edler', 'Alex Edler')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexander Steen', 'Alex Steen')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alex Frolov', 'Alexander Frolov')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexandre Burrows', 'Alex Burrows')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Bates Battaglia', 'Jon "Bates" Battaglia')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Daniel Carcillo', 'Dan Carcillo')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Daniel Lacosta', 'Dan LaCosta')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Daniel Taylor', 'Dan Taylor')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Dany Sabourin', 'Dan Sabourin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='David Steckel', 'Dave Steckel')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Dimitri Patzold', 'Dmitri Patzold')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='DJ King', 'D.J. King')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Douglas Murray', 'Doug Murray')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Freddy Modin', 'Fredrik Modin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Gregory Campbell', 'Greg Campbell')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Gregory Stewart', 'Greg Stewart')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='J-P Dumont', 'J.P. Dumont')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jason LaBarbera', 'Jason Labarbera')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Joe Dipenta', 'Joe DiPenta')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jonathan Quick', 'Jon Quick')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jordan Lavallee-Smotherman', 'Jordan LaVallee-Smotherman')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Joseph Motzko', 'Joe Motzko')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Marc-Antoine Pouliot', 'Marc Pouliot')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Martin St Pierre', 'Martin St. Pierre')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Matthew Carle', 'Matt Carle')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Maxime Talbot', 'Max Talbot')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Micki Dupont', 'Micki DuPont')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Funk', 'Mike Funk')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Grier', 'Mike Grier')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Zigomanis', 'Mike Zigomanis')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nicklas Grossmann', 'Niklas Grossman')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Niclas Bergfors', 'Nicklas Bergfors')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nikolay Zherdev', 'Nikolai Zherdev')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Olie Kolzig', 'Olaf Kolzig')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Patrick Rissmiller', 'Pat Rissmiller')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Pete Vandermeer', 'Peter Vandermeer')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Teddy Purcell', 'Ted Purcell')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vinny Prospal', 'Vaclav Prospal')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vitaly Vishnevski', 'Vitali Vishnevsky')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vyacheslav Kozlov', 'Slava Kozlov')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexandre Bolduc', 'Alex Bolduc')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Dan Lacouture', 'Dan LaCouture')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='David Van Der Gulik', 'David Van der Gulik')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Evgeny Artyukhin', 'Evgeni Artyukhin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jaime Sifers', 'Jamie Sifers')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Maksim Mayorov', 'Maxim Mayorov')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Martins Karsums', 'Martin Karsums')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Sauer', 'Mike Sauer')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Mitchell Fritz', 'Mitch Fritz')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nikolay Kulemin', 'Nikolai Kulemin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Pierre-Luc Letourneau-Leblond', 'Pierre-Luc Leblond')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='TJ Galiardi', 'T.J. Galiardi')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Patrick Dwyer', 'Pat Dwyer')) %>%
left_join(listSalaries[[i]], by = c("PlayerName"= "Player"))%>%
select(id, PlayerName,P, Age, Salary, GPsec, G,GA, PlusMin,NHL, Direct,Directh, Collective,Collectiveh)%>%
filter(GPsec != 0)%>%
dplyr::rename(Position = P)
GeneralTable$Position[which(GeneralTable$Position%in%c("LW","RW", "C"))]<-"F"
GeneralTable <- GeneralTable %>%
dplyr::rename(GP = GPsec)%>%
dplyr::rename(Points = NHL)%>%
mutate(GPDirect = Direct/GP)%>%
mutate(GPCollective = Collective/GP)%>%
mutate(GPDirecth = Directh/GP)%>%
mutate(GPCollectiveh = Collectiveh/GP)%>%
mutate(GPPlusMin= PlusMin/GP)%>%
mutate(GPPoints= Points/GP)%>%
mutate_if(is.numeric, round ,2)%>%
filter(Directh!=Inf)%>%
filter(Directh!=-Inf)%>%
filter(Collectiveh!=Inf)%>%
filter(Collectiveh!=-Inf)
GeneralTableList[[i]]<- GeneralTable %>% arrange(PlayerName)
}
GeneralTableList1<-cbind(GeneralTableList[[1]], Year = "07-08")
GeneralTableList2<-cbind(GeneralTableList[[2]], Year = "08-09")
TotalDataFrame<- rbind(GeneralTableList1, GeneralTableList2)
tableresData <- melt(TotalDataFrame, id.vars = colnames(TotalDataFrame)[c(1:8, length(colnames(TotalDataFrame)))])
Plottingdiffmeasures<-function(Data){
ggplot(Data, aes(x = Salary, y = value)) +
facet_grid(Year~., scales = "free")+
geom_point(aes(color = variable , group = Position
),show.legend = TRUE) +
labs(subtitle="Metrics comparison",
y="Valuation by Player",
x="Salary (in Million of dollars)",
title=paste0("Player's valuation ")#,
#caption = "Source: Carles Illustration"
)
}
scatterplot4<- Plottingdiffmeasures(tableresData%>% filter(grepl("GP",variable)))
scatterplot5<- Plottingdiffmeasures(tableresData%>% filter(!grepl("GP",variable)))
ind<-c(8:19)
normtableres<-data.frame(cbind(Salary =TotalDataFrame$Salary, Position=TotalDataFrame$Position, apply(TotalDataFrame[,ind],2,scale)),Year = TotalDataFrame$Year)
norm_tableresData <- reshape2::melt(normtableres, id.vars = c("Salary", "Position", "Year"))
norm_tableresData$Salary<- as.numeric(as.character(norm_tableresData$Salary))
norm_tableresData$Position<- as.character(norm_tableresData$Position)
norm_tableresData$value<- as.numeric(norm_tableresData$value)
scatterplot6<- Plottingdiffmeasures(norm_tableresData%>% filter(grepl("GP",variable)))
scatterplot7<- Plottingdiffmeasures(norm_tableresData%>% filter(!grepl("GP",variable)))
scatterplot891011<-function(Data, scaled ="Scaled", type = "by Games Played"){
p<-ggplot2::ggplot(Data)+
facet_grid(variable~Year, scales = "free")+
geom_point(aes(x =Salary, y = value, color = Position))+
theme_bw()+
labs(subtitle=paste0(scaled," ",type  ,"Regression of Metrics Valuation~Salary"),
y="Valuation",
x="Salary (in $M)",
title= paste0("Metrics regression")#,
#caption = "Source: Carles Illustration"
)
return(p)
}
scatterplot8 <- scatterplot891011(tableresData%>% filter(grepl("GP",variable)),
type = "by Games Played",
scaled = ""  )
scatterplot9 <- scatterplot891011(tableresData%>% filter(!grepl("GP",variable)),
type = "by Season",
scaled = ""  )
scatterplot10<- scatterplot891011(norm_tableresData%>% filter(grepl("GP",variable)),
type = "by Games Played",
scaled = "Scaled" )
scatterplot11<- scatterplot891011(norm_tableresData%>% filter(!grepl("GP",variable)),
type = "by Season",
scaled = "Scaled"  )
MetricsbyPosition<-function(Data, scaled ="Scaled", type = "by Games Played"){
p<-ggplot2::ggplot(Data)+
facet_grid(variable~Position, scales = "free")+
geom_point(aes(x =Salary, y = value, color = Year))+
theme_bw()+
labs(#subtitle=paste0(scaled," ",type  ,"Regression of Metrics Valuation~Salary"),
y="Valuation",
x="Salary (in $M)"#,
#title= paste0("Metrics regression")#,
#caption = "Source: Carles Illustration"
)
return(p)
}
byPosition<-MetricsbyPosition(tableresData%>% filter(!grepl("GP",variable)),
type = "by Season",
scaled = ""  )
byPositionGP<-MetricsbyPosition(tableresData%>% filter(grepl("GP",variable)),
type = "by Season",
scaled = ""  )
## The nice results are stored here
thelist<-list(boxplot1, hist1, scatterplot2, QuantileTab, byPosition, byPositionGP)
namslist<-c("boxplot", "histogram",
"Quantile", "QuantileTable",
"PositionSalaryRegression","SalaryPositionRegressionGP")
SeasonVar
# Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
GPPlayer
GPPlayer
# Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
GPPlayer
# Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
dim(GPPlayer)== dim(GPPlayers)
dim(GPPlayer)== dim(GPPlayers)
SecTableGP<-colSums(mylistDatasets[[i]]$TimeSet[,2:ncol(mylistDatasets[[i]]$TimeSet)] != 0)
mynames<-as.numeric(as.character(names(SecTableGP)))
SecTableGP<-data.frame(PlayerId=mynames,
GPsec=unlist(SecTableGP,use.names = F))
SecTableGP
GPquery
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
dim(GPPlayer)== dim(GPPlayers)
#### Getting names and
mylistDatasets<- list(DataSet2007, DataSet2008)
CompareGP<-list()
Seasons<- c(2007, 2008)
for(i in 1:length(mylistDatasets)){
TopPlayers<-TopCols(mylistDatasets[[i]]$Direct, NTOP)
TopDataset <- subset(mylistDatasets[[i]]$Direct, select = c("CountGame",TopPlayers))
PlayerId <- TopPlayers
query = paste0("SELECT PlayerName FROM `player` WHERE PlayerId IN (", paste(PlayerId,collapse=","),")")
topNAMES <- QueryMySQL(mydb= mydb, query = query)
SeasonVar<- SeasonCompletename(Season = Seasons[i])
################### Checking that time played in different matches and GP from Stats are the same
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
dim(GPPlayer)== dim(GPPlayers)
SecTableGP<-colSums(mylistDatasets[[i]]$TimeSet[,2:ncol(mylistDatasets[[i]]$TimeSet)] != 0)
mynames<-as.numeric(as.character(names(SecTableGP)))
SecTableGP<-data.frame(PlayerId=mynames,
GPsec=unlist(SecTableGP,use.names = F))
CompareGP[[i]]<-left_join(SecTableGP, GPPlayers, by = "PlayerId")
}
GPPlayer
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv")
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
# Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
GPPlayer
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
dim(GPPlayer)== dim(GPPlayers)
SecTableGP<-colSums(mylistDatasets[[i]]$TimeSet[,2:ncol(mylistDatasets[[i]]$TimeSet)] != 0)
mynames<-as.numeric(as.character(names(SecTableGP)))
SecTableGP<-data.frame(PlayerId=mynames,
GPsec=unlist(SecTableGP,use.names = F))
CompareGP[[i]]<-left_join(SecTableGP, GPPlayers, by = "PlayerId")
SecTableGP
GPPlayer
GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
(SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
GPPlayer
################### Checking that time played in different matches and GP from Stats are the same
#1
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
#2 Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
colnames(GPPlayer)<-c("PlayerName","PlayerId","GP")
for(i in 1:length(mylistDatasets)){
TopPlayers<-TopCols(mylistDatasets[[i]]$Direct, NTOP)
TopDataset <- subset(mylistDatasets[[i]]$Direct, select = c("CountGame",TopPlayers))
PlayerId <- TopPlayers
query = paste0("SELECT PlayerName FROM `player` WHERE PlayerId IN (", paste(PlayerId,collapse=","),")")
topNAMES <- QueryMySQL(mydb= mydb, query = query)
SeasonVar<- SeasonCompletename(Season = Seasons[i])
################### Checking that time played in different matches and GP from Stats are the same
#1
# GPquery = paste0("SELECT player.PlayerName, i.PlayerId, sum(i.GP) AS GP from player,
#                  (SELECT  DISTINCT team, PlayerId ,GP FROM `player_career_stats`
#                  WHERE Season = '",SeasonVar,"' AND SeasonType = 'Regular Season')i
#                  WHERE i.PlayerId = player.PlayerId GROUP by PlayerId")
# GPPlayer<- QueryMySQL(mydb= mydb, GPquery)
#2 Alternatively
GPPlayer<- read.csv(paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/PlayerIdMatchTable",SeasonVar,".csv"))
colnames(GPPlayer)<-c("PlayerName","PlayerId","GP")
#
GPPlayers<-GPPlayer[!duplicated(GPPlayer),] #removing duplicated rows
dim(GPPlayer)== dim(GPPlayers)
SecTableGP<-colSums(mylistDatasets[[i]]$TimeSet[,2:ncol(mylistDatasets[[i]]$TimeSet)] != 0)
mynames<-as.numeric(as.character(names(SecTableGP)))
SecTableGP<-data.frame(PlayerId=mynames,
GPsec=unlist(SecTableGP,use.names = F))
CompareGP[[i]]<-left_join(SecTableGP, GPPlayers, by = "PlayerId")
}
totPath <- paste0("C:/Users/Carles/Desktop/MasterThesis/CodeThesis/EvalCode/",
"scrappingSalariesNHL.R")
source(totPath)
GeneralTableList<-list()
if(SalariesCalc ==FALSE){
SalariesCalc <- TRUE
Salaries2007<-main(2008) # stands for paste0((year-1),'-', year)
Salaries2008<-main(2009)}
listSalaries<- list(Salaries2007, Salaries2008)
for(i in 1:length(c(2007,2008))){
print(i)
# change to 1 or 2 for 2007 or 2008
GeneralTable<-data.frame(id =colnames(mylistDatasets[[i]]$Direct)[2:length(mylistDatasets[[i]]$Direct)])%>%
mutate(Direct = apply(mylistDatasets[[i]]$Direct[,2:ncol(mylistDatasets[[i]]$Direct)],2,sum))%>%
mutate(Directh = apply(mylistDatasets[[i]]$Directh[,2:ncol(mylistDatasets[[i]]$Directh)],2,sum))%>%
mutate(Collective = apply(mylistDatasets[[i]]$Collective[,2:ncol(mylistDatasets[[i]]$Collective)],2,sum))%>%
mutate(Collectiveh = apply(mylistDatasets[[i]]$Collectiveh[,2:ncol(mylistDatasets[[i]]$Collectiveh)],2,sum))
GeneralTable$id<- as.numeric(as.character(GeneralTable$id))
GeneralTable<-GeneralTable%>%left_join(CompareGP[[i]][c('PlayerId','PlayerName', 'GP','GPsec')],
by = c("id"= "PlayerId"))%>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexander Edler', 'Alex Edler')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexander Steen', 'Alex Steen')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alex Frolov', 'Alexander Frolov')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexandre Burrows', 'Alex Burrows')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Bates Battaglia', 'Jon "Bates" Battaglia')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Daniel Carcillo', 'Dan Carcillo')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Daniel Lacosta', 'Dan LaCosta')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Daniel Taylor', 'Dan Taylor')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Dany Sabourin', 'Dan Sabourin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='David Steckel', 'Dave Steckel')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Dimitri Patzold', 'Dmitri Patzold')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='DJ King', 'D.J. King')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Douglas Murray', 'Doug Murray')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Freddy Modin', 'Fredrik Modin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Gregory Campbell', 'Greg Campbell')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Gregory Stewart', 'Greg Stewart')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='J-P Dumont', 'J.P. Dumont')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jason LaBarbera', 'Jason Labarbera')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Joe Dipenta', 'Joe DiPenta')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jonathan Quick', 'Jon Quick')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jordan Lavallee-Smotherman', 'Jordan LaVallee-Smotherman')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Joseph Motzko', 'Joe Motzko')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Marc-Antoine Pouliot', 'Marc Pouliot')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Martin St Pierre', 'Martin St. Pierre')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Matthew Carle', 'Matt Carle')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Maxime Talbot', 'Max Talbot')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Micki Dupont', 'Micki DuPont')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Funk', 'Mike Funk')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Grier', 'Mike Grier')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Zigomanis', 'Mike Zigomanis')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nicklas Grossmann', 'Niklas Grossman')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Niclas Bergfors', 'Nicklas Bergfors')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nikolay Zherdev', 'Nikolai Zherdev')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Olie Kolzig', 'Olaf Kolzig')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Patrick Rissmiller', 'Pat Rissmiller')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Pete Vandermeer', 'Peter Vandermeer')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Teddy Purcell', 'Ted Purcell')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vinny Prospal', 'Vaclav Prospal')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vitaly Vishnevski', 'Vitali Vishnevsky')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Vyacheslav Kozlov', 'Slava Kozlov')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Alexandre Bolduc', 'Alex Bolduc')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Dan Lacouture', 'Dan LaCouture')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='David Van Der Gulik', 'David Van der Gulik')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Evgeny Artyukhin', 'Evgeni Artyukhin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Jaime Sifers', 'Jamie Sifers')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Maksim Mayorov', 'Maxim Mayorov')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Martins Karsums', 'Martin Karsums')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Michael Sauer', 'Mike Sauer')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Mitchell Fritz', 'Mitch Fritz')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Nikolay Kulemin', 'Nikolai Kulemin')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Pierre-Luc Letourneau-Leblond', 'Pierre-Luc Leblond')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='TJ Galiardi', 'T.J. Galiardi')) %>%
mutate(PlayerName = replace(PlayerName, PlayerName=='Patrick Dwyer', 'Pat Dwyer')) %>%
left_join(listSalaries[[i]], by = c("PlayerName"= "Player"))%>%
select(id, PlayerName,P, Age, Salary, GPsec, G,GA, PlusMin,NHL, Direct,Directh, Collective,Collectiveh)%>%
filter(GPsec != 0)%>%
dplyr::rename(Position = P)
GeneralTable$Position[which(GeneralTable$Position%in%c("LW","RW", "C"))]<-"F"
GeneralTable <- GeneralTable %>%
dplyr::rename(GP = GPsec)%>%
dplyr::rename(Points = NHL)%>%
mutate(GPDirect = Direct/GP)%>%
mutate(GPCollective = Collective/GP)%>%
mutate(GPDirecth = Directh/GP)%>%
mutate(GPCollectiveh = Collectiveh/GP)%>%
mutate(GPPlusMin= PlusMin/GP)%>%
mutate(GPPoints= Points/GP)%>%
mutate_if(is.numeric, round ,2)%>%
filter(Directh!=Inf)%>%
filter(Directh!=-Inf)%>%
filter(Collectiveh!=Inf)%>%
filter(Collectiveh!=-Inf)
GeneralTableList[[i]]<- GeneralTable %>% arrange(PlayerName)
}
